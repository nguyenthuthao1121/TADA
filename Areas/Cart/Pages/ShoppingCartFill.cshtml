@page
@model ShoppingCartFillModel
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Pages/Shared/_LayoutUser.cshtml";
    ViewBag.Name = HttpContext.Session.GetString("Name");

}

<div id="shopping-cart--fill">
    <div class="grid">
        <div class="row">
            <div class="shopping-cart__title col c-10 c-o-1">
                GIỎ HÀNG
                <span class="shopping-cart__title-quality">
                    (@Model.CountBookOfCart sản phẩm)
                </span>
            </div>
        </div>
        
        <form class="row" method="post">
            @if (@Model.CountBookOfCart == 0)
            {
                <div class="shopping-cart__cart--empty col c-10 c-o-1" style="padding-bottom:24px;border-radius: 8px;">
                    <div class="shopping-cart__img--empty">
                        <img src="~/img/ico_emptycart.svg" alt="Empty Shopping cart" width=100px>
                    </div>
                    <div class="shopping-cart__text--empty">
                        Chưa có sản phẩm trong giỏ hàng của bạn
                    </div>
                    <button class="btn--blue">
                        <a asp-area="" asp-page="/Index">
                            MUA SẮM NGAY
                        </a>
                    </button>
                </div>
            }
            else
            {

                <div class="col c-7 c-o-1">
                    <div class="shopping-cart__cart--fill grid" style="width: 100%; height: auto; border-radius: 8px;">
                        <div class="shopping-cart__cart-title row">
                            <input type="checkbox" class="cart__input col c-1 check-box-all" style="padding-right: 0;" asp-action="GetSum">
                            <p class="col c-8">Chọn tất cả</p>
                            <button class="cart__list--delete col c-3" style="border: none;background: none;" type="submit" asp-page-handler="DeleteBookOfCart">
                                <i class="fa-solid fa-trash-can icon-delete"></i>Xóa
                            </button>
                        </div>
                        <div class="shopping-cart__cart-list grid" method="post">
                            @for (int i = 0; i < Model.CountBookOfCart; i++)
                            {
                                var Book = Model.GetBookByCartDetail(@Model.CartDetails[i]);
                                    var imgPath = Book.Image + "/cover.jpg";
                                <div class="cart__flex-item row" method="post" data-bookId="@Book.Id">
                                    <input name="bookId" value="@Book.Id" type="number" style="display: none;">
                                    <label class="lable-checkbox col c-1">
                                        <input type="checkbox" class="cart__input select-book check-box-item" style=" padding-right: 0;" asp-for="@Model.IsSelected[i]" data-id="@i" />
                                    </label>
                                    <a asp-area="Book" asp-page="BookDetailUser" asp-route-id="@Book.Id" class="order-book__img col c-2"><img src="@Url.Content(imgPath)" alt="Ảnh sách" style="height: 140px;"></a>
                                    <div class="cart__book-desc col c-5">
                                        <a asp-area="Book" asp-page="BookDetailUser" asp-route-id="@Book.Id" class="cart__book-name">
                                            @Book.Name
                                        </a>
                                        <p class="cart__book-provider">
                                            Nhà cung cấp:
                                            <span>@Book.Publisher</span>
                                        </p>
                                    </div>
                                    <div class="cart__book-price col c-3">
                                        <p class="js-priceOfBook" data-bookId="@Book.Id" data-price="@Book.GetCurrentPrice()">@Book.GetPriceString(Book.GetCurrentPrice()) đ</p>
                                        <span class="form-group d-flex">
                                        <button class="input-group-text js-decrease" style="border-radius: 8px 0 0 8px; border-right-style: none;" type="button" >
                                            <i class="fas fa-minus"></i>
                                        </button>
                                            <input class="form-control quantity-input js-numOfBook" type="text" asp-for="@Model.CartDetails[i].Quantity" value="@Model.CartDetails[i].Quantity" data-item-id="@i" readonly>
                                            <input class="form-control quantity-input js-quantityOfBook" type="hidden" value="@Book.Quantity">
                                        <button class="input-group-text js-increase" style="border-radius: 0 8px 8px 0; border-left-style: none;" type="button" >
                                            <i class="fas fa-plus"></i>
                                        </button>
                                        </span>
                                    </div>
                                    <button class="col c-1 js-delete-item" style="border: none;background: none;" type="button" data-item-id="@i" >
                                        <i class="fa-solid fa-trash-can icon-delete"></i>
                                    </button>
                                </div>
                            }

                        </div>
                    </div>
                </div>
                <div class="col c-3">
                    <div class="nav__order-detail" style="width: 100%; height:auto; border-radius: 8px;">
                        <div class="order__title">
                            Chi tiết đơn hàng
                        </div>
                        <div class="order-detail__desc grid">
                            <div class="row">
                                <div class="col c-7" style="padding: 0;">Số lượng</div>
                                <div class="col c-5" style="padding: 0; text-align:right;">
                                    <span id="js-countBook">@Model.NumOfOrder</span> quyển
                                </div>
                            </div>
                            <div class="row">
                                <div class="col c-7" style="padding: 0;">Tổng giá</div>
                                <div class="col c-5" style="padding: 0; text-align:right; color:#1E90FF">
                                    <span id="js-sumOfPrice">@Model.GetPriceString(Model.SumOfOrder)</span> đ
                                </div>
                            </div>
                        </div>
                        <div class="btn--confirm">
                            <button type="submit" asp-page-handler="OrderNow" class="btn btn-primary" id="get-selected-book" style="width:100%;">
                                XÁC NHẬN ĐƠN HÀNG
                            </button>
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</div>
    <!-- JavaScript -->
    <!-- Select Book -->

@section scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            getOrder();
            // Thêm sự kiện click cho nút "Chọn tất cả"
            $('.check-box-all').on('change', function () {
                $('.check-box-item').prop('checked', $('.check-box-all').is(':checked'));
                getOrder();
            });
            // Thêm sự kiện click cho nút "Chọn"
            $('.check-box-item').on('change', function () {
                $('.check-box-all').prop('checked', $('.check-box-item:checked').length === $('.check-box-item').length);
                getOrder();

            });

            // Thêm sự kiện click cho nút "Tăng"
            $(".js-increase").on("click", function (e) {
                e.preventDefault();
                var input = $(this).siblings(".js-numOfBook");
                var quantityOfBook = parseInt(($(this).siblings(".js-quantityOfBook")).val());
                var quantity = parseInt(input.val());
                if (quantity < quantityOfBook){
                    input.val(quantity + 1);
                    updateCartQuantity(input);
                }
                getOrder();

            });

            // Thêm sự kiện click cho nút "Giảm"
            $(".js-decrease").on("click", function (e) {
                e.preventDefault();
                var input = $(this).siblings(".js-numOfBook");
                var quantity = parseInt(input.val());
                if (quantity > 1) {
                    input.val(quantity - 1);
                    updateCartQuantity(input);
                }
                    getOrder();
                });

            // Thêm sự kiện click cho nút "Xóa"
            $(".js-delete-item").on("click", function (e) {
                e.preventDefault();
                var itemId = $(this).data("item-id");
                $.ajax({
                    type: "GET",
                    url: "/Cart/ShoppingCartFill?handler=DeleteCartDetail",
                    data: { itemId: itemId},
                    success: function (response) {
                        // Cập nhật số lượng sản phẩm trong giỏ hàng
                        location.reload();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseText);
                    }
                });
                

            });
        });

        function updateCartQuantity(input) {
            var itemId = input.data("item-id");
            var quantity = input.val();
            $.ajax({
                type: "GET",
                url: "/Cart/ShoppingCartFill?handler=UpdateQuantity",
                data: { itemId: itemId, quantity: quantity },
                success: function (response) {
                    // Cập nhật số lượng sản phẩm trong giỏ hàng
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log(xhr.responseText);
                }
            });
        }
        const getPriceString = function (price) {
            var str = price.toString();
            var tmp = "";
            while (str.length > 3) {
                tmp = "." + str.substring(str.length - 3) + tmp;
                str = str.substring(0, str.length - 3);
            }
            tmp = str + tmp;
            return tmp;
        }
        const getOrder = function (){
            let countBook = 0;
            let priceOfBooks = 0;
            $('.check-box-item:checked').each(function(){
                countBook = countBook + parseInt($(this).parent().siblings('.cart__book-price').find('.js-numOfBook').val());
                let price = ($(this).parent().siblings('.cart__book-price').find('.js-priceOfBook').text()).replace(/\./g, '');
                priceOfBooks = priceOfBooks + parseInt($(this).parent().siblings('.cart__book-price').find('.js-numOfBook').val()) * parseInt(price);
                console.log(priceOfBooks);
            })
            $('#js-countBook').text(countBook);
            $('#js-sumOfPrice').text(getPriceString(priceOfBooks));
            selected();
        }
        const selected = function(){
            $('.check-box-item').each(function () {
                $(this).parents('.cart__flex-item').removeClass('cart__flex-item--checked');
            });
            $('.check-box-item:checked').each(function () {
                $(this).parents('.cart__flex-item').addClass('cart__flex-item--checked');
            });
        }
    </script>
}


